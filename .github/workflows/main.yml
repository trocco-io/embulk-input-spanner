name: main

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request:
    branches:
      - 'main'
    types: [opened, synchronize]

jobs:
  main:
    runs-on: ubuntu-latest

    services:
      spanner-emulator:
        image: gcr.io/cloud-spanner-emulator/emulator:1.4.1
        ports:
          - "9010:9010"
          - "9020:9020"


    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: lint
        # Run ./gradlew spotlessApply when failing on this step.
        run: ./gradlew spotlessCheck

      - name: Setup Spanner Emulator Instance
        run: |
          gcloud config configurations create emulator
          gcloud config set auth/disable_credentials true
          gcloud config set project ${PROJECT_ID}
          gcloud config set api_endpoint_overrides/spanner ${SPANNER_EMULATOR_URL}
          gcloud config set auth/disable_credentials true
          gcloud spanner instances create ${INSTANCE_NAME} --config=emulator-config --description=Emulator --nodes=1
        env:
          PROJECT_ID: "test-project"
          SPANNER_EMULATOR_URL: "http://127.0.0.1:9020/"
          INSTANCE_NAME: "test-instance"
          DATABASE_NAME: "test-database"
      - run: ./gradlew test
        env:
          SPANNER_EMULATOR_HOST: "127.0.0.1:9010"

      - name: Show Current Version
        run: ./gradlew printVersion
      - name: Build Gem & Put it into './build/gems/' Directory
        run: ./gradlew gem

      - name: Set up JRuby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: jruby

      - name: Publish to GPR
        if: startsWith( github.ref, 'refs/tags/' )
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:github: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
          gem push --KEY github --host https://rubygems.pkg.github.com/${OWNER} ./build/gems/*.gem
        env:
          GEM_HOST_API_KEY: "Bearer ${{secrets.GITHUB_TOKEN}}"
          OWNER: ${{ github.repository_owner }}

      - name: Publish to RubyGems
        if: startsWith( github.ref, 'refs/tags/' )
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
          # TODO: If it is possible to accept input in the middle of a step, then the OTP Token should be inputted instead of generated.
          gem install rotp -v 6.2.0
          OTP_TOKEN=$(echo ${OTP_SECRET} | ruby -rtime -rrotp -e "puts ROTP::TOTP.new(STDIN.read.chomp, issuer: 'rubygems.org').at(Time.now)")
          gem push --otp="${OTP_TOKEN}" ./build/gems/*.gem
        env:
          GEM_HOST_API_KEY: "${{secrets.RUBYGEMS_API_KEY}}"
          OTP_SECRET: "${{secrets.RUBYGEMS_OTP_SECRET}}"
